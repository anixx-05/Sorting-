#include<stdio.h>
#include<conio.h>
#include<stdlib.h>

// Node structure containing power and coefficient variables
struct Node {
    int coeff;
    int pow;
    struct Node* next;
};

struct Node *poly1 = NULL, *poly2 = NULL, *poly = NULL;

// Function to create a new node
void create_node(int x, int y, struct Node** temp) {
    struct Node *r, *z;
    z = *temp;
    if (z == NULL) {
        r = (struct Node*)malloc(sizeof(struct Node));
        r->coeff = x;
        r->pow = y;
        *temp = r;
        r->next = (struct Node*)malloc(sizeof(struct Node));
        r = r->next;
        r->next = NULL;
    }
    else {
        r->coeff = x;
        r->pow = y;
        r->next = (struct Node*)malloc(sizeof(struct Node));
        r = r->next;
        r->next = NULL;
    }
}

// Display Linked list
void show(struct Node* node) {
    while (node->next != NULL) {
        printf("%dx^%d", node->coeff, node->pow);
        node = node->next;
        if (node->coeff >= 0) {
            if (node->next != NULL)
                printf("+");
        }
    }
}

// Driver code
int main() {
    int opt, count, c, e;
    printf("\n1. Create First Polynomial\n2. Create 2nd Polynomial\n3. Add the Two Polynomials\n4. Exit\n");
    printf("Enter your option: ");
    while(1) {
        scanf("%d", &opt);
        switch (opt) {
            case 1:
                printf("Enter Number of Terms in First Polynomial: ");
                scanf("%d", &count);
                while(count-- > 0) {
                    printf("Enter co-efficient and exponent: ");
                    scanf("%d %d", &c, &e);
                    create_node(c, e, &poly1);
                }
                printf("1st Polynomial: ");
                show(poly1);
                break;
            case 2:
                printf("Enter Number of Terms in Second Polynomial: ");
                scanf("%d", &count);
                while(count-- > 0) {
                    printf("Enter co-efficient and exponent: ");
                    scanf("%d %d", &c, &e);
                    create_node(c, e, &poly2);
                }
                printf("2nd Polynomial: ");
                show(poly2);
                break;
            case 3:
                while (poly1->next != NULL && poly2->next != NULL) {
                    if (poly1->pow > poly2->pow) {
                        create_node(poly1->coeff, poly1->pow, &poly);
                        poly1 = poly1->next;
                    }
                    else if (poly1->pow < poly2->pow) {
                        create_node(poly2->coeff, poly2->pow, &poly);
                        poly2 = poly2->next;
                    }
                    else {
                        create_node(poly1->coeff + poly2->coeff, poly1->pow, &poly);
                        poly1 = poly1->next;
                        poly2 = poly2->next;
                    }
                }

                while (poly1->next != NULL) {
                    create_node(poly1->coeff, poly1->pow, &poly);
                    poly1 = poly1->next;
                }

                while (poly2->next != NULL) {
                    create_node(poly2->coeff, poly2->pow, &poly);
                    poly2 = poly2->next;
                }
                printf("Sum of Polynomials: ");
                show(poly);
                break;
            case 4:
                exit(0);
        }
        printf("\n1. Create First Polynomial\n2. Create 2nd Polynomial\n3. Add the Two Polynomials\n4. Exit\n");
        printf("Enter your option: ");
    }
}
