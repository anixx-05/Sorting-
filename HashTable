#include<stdio.h>
#include<stdlib.h>
#define size 10

int arr[size];

void init() {
    int i;
    for(i = 0; i < size; i++) 
        arr[i] = -1;
}

void insert() {
    int value;
    printf("\nEnter value to be inserted: ");
    scanf("%d", &value);
    int key = value % size;

    if(arr[key] == -1) {
        arr[key] = value;
        printf("%d inserted at arr[%d]\n", value, key);
    } else {
        printf("Collision: arr[%d] has element %d already!\n", key, arr[key]);
        printf("Unable to insert %d\n", value);
    }
}

void del() {
    int value;
    printf("\nEnter value to be deleted: ");
    scanf("%d", &value);
    int key = value % size;

    if(arr[key] == value) {
        arr[key] = -1;
    } else {
        printf("%d not present in the hash table\n", value);
    }
}

void search() {
    int value;
    printf("\nEnter value to be searched: ");
    scanf("%d", &value);
    int key = value % size;

    if(arr[key] == value) {
        printf("Search Found\n");
    } else {
        printf("Search Not Found\n");
    }
}

void print() {
    int i;
    for(i = 0; i < size; i++) {
        printf("arr[%d] = %d\n", i, arr[i]);
    }
}

int main() {
    int opt;
    init();

    printf("\nHash Table of size 10 has been initialized. Enter your option:\n");
    printf("1. Insert\t2. Delete\t3. Search\t4. Display\t5. Exit\n");

    while(1) {
        scanf("%d", &opt);
        switch(opt) {
            case 1:
                insert();
                break;
            case 2:
                del();
                break;
            case 3:
                search();
                break;
            case 4:
                print();
                break;
            case 5:
                exit(0);
        }
        printf("\n1. Insert\t2. Delete\t3. Search\t4. Display\t5. Exit\n");
        printf("\nEnter your option\n");
    }
    return 0;
}
