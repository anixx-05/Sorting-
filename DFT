#include <stdio.h>
#include <stdlib.h>

void dfs(int);

int g[10][10], visited[10], n, vertex[10];

void main() {
    int i, j;
    printf("Enter number of vertices: ");
    scanf("%d", &n);  // Correct input for number of vertices

    printf("Enter the values of vertices: ");
    for(i = 0; i < n; i++) {
        scanf("%d", &vertex[i]);
    }

    printf("Enter the adjacency matrix of the graph: \n");
    for(i = 0; i < n; i++) {
        for(j = 0; j < n; j++) {
            scanf("%d", &g[i][j]);  // Correct input for adjacency matrix
        }
    }

    for(i = 0; i < n; i++) {
        visited[i] = 0;  // Initialize visited array to 0
    }

    dfs(0);  // Call DFS starting from vertex 0
}

void dfs(int v) {
    int j;
    printf("%d ", vertex[v]);  // Print the vertex
    visited[v] = 1;  // Mark the vertex as visited

    for(j = 0; j < n; j++) {
        if(!visited[j] && g[v][j] == 1) {  // Check if the vertex is connected and not visited
            dfs(j);  // Recursively visit the connected vertex
        }
    }
}
